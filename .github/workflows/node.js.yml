# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "508-add-coverage-to-playwright" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install PL/Python in the PostgreSQL container (Old migrations)
      run: |
        # Version can change see in docker page wich is postgres:latest
        docker exec ${{ job.services.postgres.id }} bash -c "apt-get update && apt-get install -y postgresql-plpython3-16"

    - name: Create PL/Python extension
      run: |
        docker exec ${{ job.services.postgres.id }} bash -c "PGPASSWORD=postgres psql -h localhost -U postgres -c 'CREATE EXTENSION plpython3u;'"
        docker exec ${{ job.services.postgres.id }} bash -c "PGPASSWORD=postgres createdb -h localhost -U postgres xulpymoney"


    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL to become ready..."
          sleep 2
        done


    - name: Install python dependencies for 3.12 and launch django_moneymoney cypress_test_server
      run: |
        sudo apt-get install python3.12 python3.12-venv
        cd ..
        git clone https://github.com/turulomio/django_moneymoney
        cd django_moneymoney
        sudo python3.12 -m venv .python3.12
        sudo .python3.12/bin/pip install .
        sudo .python3.12/bin/python manage.py testserver moneymoney/fixtures/all.json moneymoney/fixtures/test_server.json --addrport 8004 &

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Moneymoney install and test build
      run: |
        npm install
        npm run build --if-present

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Moneymoney e2e test
      run: |
        npm run dev &
        sleep 10
        npm run playwright_console
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
